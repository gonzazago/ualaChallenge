// Code generated by MockGen. DO NOT EDIT.
// Source: user-service/internal/delivery/rest/users (interfaces: UserCreateService)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/save_service.go -package=mocks user-service/internal/delivery/rest/users UserCreateService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	users "user-service/internal/domain/users"

	gomock "go.uber.org/mock/gomock"
)

// MockUserCreateService is a mock of UserCreateService interface.
type MockUserCreateService struct {
	ctrl     *gomock.Controller
	recorder *MockUserCreateServiceMockRecorder
	isgomock struct{}
}

// MockUserCreateServiceMockRecorder is the mock recorder for MockUserCreateService.
type MockUserCreateServiceMockRecorder struct {
	mock *MockUserCreateService
}

// NewMockUserCreateService creates a new mock instance.
func NewMockUserCreateService(ctrl *gomock.Controller) *MockUserCreateService {
	mock := &MockUserCreateService{ctrl: ctrl}
	mock.recorder = &MockUserCreateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserCreateService) EXPECT() *MockUserCreateServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserCreateService) Create(ctx context.Context, user *users.User) (*users.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, user)
	ret0, _ := ret[0].(*users.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockUserCreateServiceMockRecorder) Create(ctx, user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserCreateService)(nil).Create), ctx, user)
}
