// Code generated by MockGen. DO NOT EDIT.
// Source: post-service/internal/delivery/rest/post (interfaces: PostCreateService)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/save_service.go -package=mocks post-service/internal/delivery/rest/post PostCreateService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	post "post-service/internal/domain/post"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPostCreateService is a mock of PostCreateService interface.
type MockPostCreateService struct {
	ctrl     *gomock.Controller
	recorder *MockPostCreateServiceMockRecorder
	isgomock struct{}
}

// MockPostCreateServiceMockRecorder is the mock recorder for MockPostCreateService.
type MockPostCreateServiceMockRecorder struct {
	mock *MockPostCreateService
}

// NewMockPostCreateService creates a new mock instance.
func NewMockPostCreateService(ctrl *gomock.Controller) *MockPostCreateService {
	mock := &MockPostCreateService{ctrl: ctrl}
	mock.recorder = &MockPostCreateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostCreateService) EXPECT() *MockPostCreateServiceMockRecorder {
	return m.recorder
}

// CreatePost mocks base method.
func (m *MockPostCreateService) CreatePost(ctx context.Context, arg1 *post.Post) (*post.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost", ctx, arg1)
	ret0, _ := ret[0].(*post.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockPostCreateServiceMockRecorder) CreatePost(ctx, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockPostCreateService)(nil).CreatePost), ctx, arg1)
}
